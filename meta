#!/usr/bin/env bash

META_SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

meta_check() {
  if [[ ${#} -lt 1 ]]; then
    printf "Usage: meta_check DEPENDENCY_FILENAMES...\n"
    return 1
  fi

  for dep in "${@}"; do
    if [[ $(type -t "_${dep}_scripts_init") != "function" ]]; then
      meta_init "${dep}"
      return
    fi
  done
}

meta_download_script() {
  if [[ ${#} -ne 1 ]]; then
    printf "Usage: meta_download_script DEPENDENCY_FILENAME\n"
    return 1
  fi

  local DEPENDENCY_FILENAME="${1}"
  shift

  mkdir -p "$(dirname "${DEPENDENCY_FILENAME}")"
  curl --disable --silent --show-error --location --max-time 30 --output "${DEPENDENCY_FILENAME}" -- "${REMOTE_DEPENDENCIES_URL}/${DEPENDENCY_FILENAME}"
  chmod +x "${DEPENDENCY_FILENAME}"
}

meta_init() {
  local REMOTE_DEPENDENCIES_URL="https://raw.githubusercontent.com/ViBiOh/scripts/main/"

  cd "${META_SCRIPT_DIR}" || return 1

  for dep in "${@}"; do
    if [[ -z ${dep-} ]]; then
      continue
    fi

    if ! [[ -e "./${dep}" ]]; then
      printf 1>&2 "Downloading script %s...\n" "${dep}"
      meta_download_script "${dep}"
    fi

    if [[ $(grep -c "main()" "./${dep}") -eq 0 ]]; then
      source "./${dep}"

      if [[ $(grep -c "_${dep}_scripts_init" "./${dep}") -eq 1 ]]; then
        "_${dep}_scripts_init"
      fi
    fi
  done

  cd - >/dev/null || return 1
}
