#!/usr/bin/env bash

set -o nounset -o pipefail

sed_inplace() {
  if [[ ${OSTYPE} =~ ^darwin ]]; then
    sed -i '' "${@}"
  else
    sed -i "${@}"
  fi
}

main() {
  local SCRIPT_REAL_PATH
  SCRIPT_REAL_PATH="$(python -c 'import sys; import os.path; print(os.path.realpath(sys.argv[1]))' "${BASH_SOURCE[0]}")"
  local SCRIPT_DIR
  SCRIPT_DIR="$(cd "$(dirname "${SCRIPT_REAL_PATH}")" && pwd)"

  source "${SCRIPT_DIR}/../meta" && meta_init "git"

  local BRANCH_NAME
  BRANCH_NAME=$(git symbolic-ref --short HEAD)

  local FIRST_LINE
  FIRST_LINE="$(head -1 "${1}")"

  if [[ $(git_is_commit_wip "${FIRST_LINE}") == "true" ]]; then
    exit 0
  fi

  if [[ -n ${BRANCH_NAME} && ${BRANCH_NAME} =~ (features|fixes)/([A-Z0-9]+[-_][0-9]+) ]]; then
    local PREFIX="${BASH_REMATCH[2]}"

    if [[ ! ${FIRST_LINE} =~ ${PREFIX} ]]; then
      if [[ $(git_is_conventional_commit "${FIRST_LINE}") == "true" ]]; then
        perl -pi'' -e "s|^(revert:\ )?($(printf "%s\|" "${!CONVENTIONAL_COMMIT_SCOPES[@]}"))(\(.+\))?(\!?):|\1\2\3\4: ${PREFIX}|" "${1}"
      else
        sed_inplace -e "1s|^|${PREFIX} |" "${1}"
      fi
    fi
  fi

  exit 0
}

main "${@:-}"
