#!/usr/bin/env bash

SSH_SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
SSH_ENV="${HOME}/.ssh/environment"

ssh_forward_local() {
  source "${SSH_SCRIPT_DIR}/meta" && meta_init "var"
  var_color

  if [[ ${#} -lt 3 ]]; then
    var_error "Usage: ssh_forward_local LOCAL_PORT REMOTE_PORT SSH_PARTS..."
    return 1
  fi

  local LOCAL_PORT="${1}"
  shift
  local REMOTE_PORT="${1}"
  shift

  ssh -N -L "${LOCAL_PORT}:localhost:${REMOTE_PORT}" "${@}"
}

ssh_forward_remote() {
  source "${SSH_SCRIPT_DIR}/meta" && meta_init "var"
  var_color

  if [[ ${#} -lt 3 ]]; then
    var_error "Usage: ssh_forward_remote REMOTE_PORT LOCAL_PORT SSH_PARTS..."
    return 1
  fi

  local REMOTE_PORT="${1}"
  shift
  local LOCAL_PORT="${1}"
  shift

  ssh -N -R "${REMOTE_PORT}:localhost:${LOCAL_PORT}" "${@}"
}

ssh_agent_running() {
  if ps -p "${SSH_AGENT_PID:-}" >/dev/null 2>&1; then
    return 0
  fi

  return 1
}

ssh_agent_stop() {
  if ssh_agent_running; then
    ssh-agent -k

    source <(sed 's|export|unset|' "${SSH_ENV}")
    rm -rf "${SSH_ENV:?}"
  fi

  for pid in $(pgrep 'ssh-agent'); do
    kill -9 "${pid}"
  done
}

ssh_agent_start() {
  printf "Initializing new SSH agent...\n"

  touch "${SSH_ENV}"
  chmod 600 "${SSH_ENV}"

  ssh-agent | grep --invert-match "^echo" >"${SSH_ENV}"
  source "${SSH_ENV}"
}

ssh_agent_init() {
  ssh_agent_stop

  if [[ -d "${HOME}/.ssh/" ]]; then
    local AGENT_INITIALIZED="false"

    while IFS= read -r -d '' key; do
      if [[ ${AGENT_INITIALIZED} == "false" ]]; then
        AGENT_INITIALIZED="true"
        ssh_agent_start
      fi

      ssh-add -k "${key%.pub}"
    done < <(find "${HOME}/.ssh" -type f -name '*.pub' -print0)
  fi
}

ssh_init() {
  if [[ -f ${SSH_ENV:-} ]]; then
    source "${SSH_ENV}"
  fi

  if ! ssh_agent_running && [[ $(type -t ssh_agent_init) == "function" ]]; then
    ssh_agent_init
  fi
}
