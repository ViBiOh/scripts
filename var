#!/usr/bin/env bash

_var_scripts_init() {
  export RED='\033[0;31m'
  export GREEN='\033[0;32m'
  export YELLOW='\033[33m'
  export BLUE='\033[0;34m'
  export PURPLE='\033[35m'
  export RESET='\033[0m'
}

var_read() {
  if [[ ${#} -lt 1 ]]; then
    var_red "Usage: var_read VAR_NAME [VAR_DEFAULT] [VAR_SECRET]"
    return 1
  fi

  local VAR_NAME="${1}"
  shift
  local VAR_DEFAULT="${1-}"
  shift || true
  local VAR_SECRET="${1-}"
  shift || true

  local VAR_SECRET_ARG=""
  if [[ ${VAR_SECRET-} == "secret" ]]; then
    VAR_SECRET_ARG="-s"
  fi

  local VAR_DEFAULT_DISPLAY=""
  if [[ -n ${VAR_DEFAULT} ]]; then
    if [[ ${VAR_SECRET-} == "secret" ]]; then
      VAR_DEFAULT_DISPLAY=" [*****]"
    else
      VAR_DEFAULT_DISPLAY=" [${VAR_DEFAULT}]"
    fi
  fi

  if [[ -z ${!VAR_NAME-} ]]; then
    if [[ -z ${SCRIPTS_NO_INTERACTIVE-} ]]; then
      read ${VAR_SECRET_ARG?} -r -p "${VAR_NAME}${VAR_DEFAULT_DISPLAY}=" READ_VALUE </dev/tty
    fi

    local VAR_SAFE_VALUE
    VAR_SAFE_VALUE="$(printf "%s" "${READ_VALUE:-${VAR_DEFAULT}}" | sed "s|'|\\\'|g")"
    eval "${VAR_NAME}=$'${VAR_SAFE_VALUE}'"

    if [[ ${VAR_SECRET_ARG} == "-s" ]]; then
      printf "\n" 1>&2
    fi
  elif [[ ${VAR_SECRET_ARG} != "-s" ]]; then
    printf "%s=%s\n" "${VAR_NAME}" "${!VAR_NAME}" 1>&2
  else
    printf "Using secret %s\n" "${VAR_NAME}" 1>&2
  fi
}

var_shift_or_read() {
  local VAR_NAME="${1}"
  shift

  local VAR_VALUE="${1-}"
  if [[ -n ${VAR_VALUE} ]]; then
    local VAR_SAFE_VALUE
    VAR_SAFE_VALUE="$(printf "%s" "${VAR_VALUE}" | sed "s|'|\\\'|g")"
    eval "${VAR_NAME}=$'${VAR_SAFE_VALUE}'"

    printf "%s=%s\n" "${VAR_NAME}" "${!VAR_NAME}" 1>&2
    return
  fi

  var_read "${VAR_NAME}"
}

var_confirm() {
  local VAR_CONFIRM_MESSAGE="${1:-Are you sure}"

  if [[ -n ${BASH_VERSION} ]]; then
    read -r -p "${VAR_CONFIRM_MESSAGE}? [y/N] " input </dev/tty
  elif [[ -n ${ZSH_VERSION} ]]; then
    read -r "input?${VAR_CONFIRM_MESSAGE}? [y/N] " </dev/tty
  else
    return 0
  fi

  case "${input}" in
  [yY][eE][sS] | [yY])
    return 0
    ;;

  *)
    return 1
    ;;
  esac
}

var_log() {
  local COLOR="${1}"
  shift

  printf -- "%b%b%b\n" "${COLOR}" "${*}" "${RESET}" 1>&2
}

var_red() {
  var_log "${RED}" "${@}"
}

var_green() {
  var_log "${GREEN}" "${@}"
}

var_error() {
  var_log "${RED}" "x" "${@}"
}

var_warning() {
  var_log "${YELLOW}" "${@}"
}

var_success() {
  var_log "${GREEN}" "âœ”" "${@}"
}

var_info() {
  var_log "${BLUE}" "${@}"
}

var_print_and_run() {
  printf -- "%b%s%b\n" "${YELLOW}" "${*}" "${RESET}" 1>&2
  eval "${*}"
}
