#!/usr/bin/env bash

_http_scripts_init() {
  return 0
}

http_urlencode() {
  local OLD_LC_COLLATE="${LC_COLLATE-}"
  LC_COLLATE="C"

  local length="${#1}"
  for ((i = 0; i < length; i++)); do
    local c="${1:i:1}"
    case "${c}" in
    [a-zA-Z0-9.~_-]) printf "%s" "${c}" ;;
    ' ') printf "%%20" ;;
    *) printf '%%%02X' "'$c" ;;
    esac
  done

  LC_COLLATE="${OLD_LC_COLLATE}"
}

http_handle_error() {
  meta_check "var"

  var_error "HTTP/${HTTP_STATUS}: ${1-}"

  if [[ -e ${HTTP_OUTPUT} ]]; then
    cat "${HTTP_OUTPUT}" 1>&2 && rm "${HTTP_OUTPUT}"
  fi
}

http_init_client() {
  export HTTP_OUTPUT
  HTTP_OUTPUT="$(mktemp)"

  HTTP_CLIENT_ARGS=("curl" "--disable" "--silent" "--show-error" "--location" "--max-time" "10" "--output" "${HTTP_OUTPUT}" "--write-out" "%{http_code}")
  if [[ ${#} -gt 0 ]]; then
    HTTP_CLIENT_ARGS+=("${@}")
  fi

  export HTTP_CLIENT_ARGS
}

http_request() {
  export HTTP_STATUS
  HTTP_STATUS="$("${HTTP_CLIENT_ARGS[@]}" "${@}")"
}

http_reset() {
  rm "${HTTP_OUTPUT}"

  HTTP_CLIENT_ARGS=()
  export HTTP_CLIENT_ARGS
}
